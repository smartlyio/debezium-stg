{# /*
  This macro is the "exportable" version of macros, implemented here. It
  generated model, calculating historical states of entities of the source
  system from events, generated by Debezium Kafka-Connect CDC. This macro
  actually merge arguments with some default values and calls either a
  simplified version for initial materialization of a normal one for
  incremental materialization.
*/ #}
{%- macro to_stg_layer_scd(
  source_ref,
  fields,
  incremental,
  scd_type,
  source_engine,
  aliases=none,
  pk_fields=none
) -%}
  {%- set scd_type_scd2 = 'scd2' -%}
  {%- set scd_type_scd4 = 'scd4' -%}
  {%- if scd_type not in (scd_type_scd2, scd_type_scd4,) -%}
    {{- exceptions.raise_compiler_error(
      'Unsupported scd_type "{}" supported: ["{}", "{}"]'
        .format(scd_type, scd_type_scd2, scd_type_scd4),
    ) -}}
  {%- endif -%}

  {{- debezium_stg.ensure_source_engine_supported(source_engine) -}}

  {%- set pk_fields = pk_fields if pk_fields else [{'id': '{}::BIGINT'}] -%}
  {%- set pk_field_aliases = [] -%}
  {%- for field in pk_fields -%}
    {%- do pk_field_aliases.append(
      debezium_stg.extract_column_alias(field=field),
    ) -%}
  {%- endfor -%}

  {%- set aliases = debezium_stg.to_stg_layer_scd_aliases(
    aliases=aliases if aliases is not none else {}
  ) -%}

  {%- set batch_mgmt_fields = (aliases['loaded_at'], aliases['row_id'],) -%}

  {%- if scd_type == scd_type_scd4 -%}
    {# {%- if
      model.config.materialized != 'incremental'
      or model.config.incremental_strategy != 'append'
    -%}
      {{- exceptions.raise_compiler_error(
        'Model "' ~ model.name ~ '" should be configured with '
          ~ 'matreialization = "incremental" and incremental_strategy = '
          ~ '"append"',
      ) -}}
    {%- endif -%} #}

    {{- return(debezium_stg.to_stg_layer_scd4(
      source_ref=source_ref,
      fields=pk_fields+fields,
      pk_field_aliases=pk_field_aliases,
      batch_mgmt_fields=batch_mgmt_fields,
      incremental=incremental,
      ctes_only=false,
      aliases=aliases,
    )) -}}
  {%- endif -%}

  {# {%- if
    model.config.materialized != 'incremental'
    or model.config.incremental_strategy != 'merge'
  -%}
    {{- exceptions.raise_compiler_error(
      'Model "' ~ model.name ~ '" should be configured with matreialization '
        ~ '= "incremental" and incremental_strategy = "merge"',
    ) -}}
  {%- endif -%} #}

  {%- set field_aliases = [] -%}
  {%- for field in fields -%}
    {%- do field_aliases.append(
      debezium_stg.extract_column_alias(field=field),
    ) -%}
  {%- endfor -%}

  {%- call debezium_stg.to_stg_layer_scd4_to_scd2(
    field_aliases=pk_field_aliases+field_aliases,
    incremental=incremental,
    aliases=aliases,
  ) -%}
    {{- debezium_stg.to_stg_layer_scd4(
      source_ref=source_ref,
      fields=pk_fields+fields,
      pk_field_aliases=pk_field_aliases,
      batch_mgmt_fields=batch_mgmt_fields,
      incremental=incremental,
      ctes_only=true,
      aliases=aliases,
    ) -}}
  {%- endcall -%}
{% endmacro %}
